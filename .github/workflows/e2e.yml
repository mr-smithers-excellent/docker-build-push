name: 'e2e Tests'

on:
  schedule:
    - cron: '0 8 * * *' # everyday at 8am UTC
  push:
    branches:
      - add-e2e-tests # TODO: Remove, temporary
      - master
  pull_request:

jobs:
  e2e:
    name: ${{ matrix.name }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - image: mrsmithers/hello-world
            name: Docker Hub
            registry: docker.io
            username: DOCKERHUB_USERNAME
            password: DOCKERHUB_PASSWORD

          - image: orbital-bank-301021/hello-world
            name: GCR
            registry: gcr.io
            username: GCR_USERNAME
            password: GCR_PASSWORD

          - image: hello-world
            name: ECR
            registry: 026181534292.dkr.ecr.us-west-2.amazonaws.com

          - image: docker-build-push/hello-world
            name: GHCR Legacy
            registry: docker.pkg.github.com
            username: GHCR_USERNAME
            password: GITHUB_TOKEN

          - image: hello-world-ghcr
            name: GHCR
            registry: ghcr.io
            githubOrg: mr-smithers-excellent
            username: GHCR_USERNAME
            password: GHCR_PASSWORD

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Build and push Docker image
        id: docker
        uses: ./
        with:
          dockerfile: ./e2e/Dockerfile
          image: ${{ matrix.image }}
          tags: latest, ${{ github.run_id }}
          registry: ${{ matrix.registry }}
          githubOrg: ${{ matrix.githubOrg }}
          username: ${{ secrets[matrix.username] }}
          password: ${{ secrets[matrix.password] }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Verify Docker image
        run: |
          docker pull ${{ steps.docker.outputs.imageFullName }}:${{ github.run_id }}
          docker image inspect ${{ steps.docker.outputs.imageFullName }}:${{ github.run_id }}

#      - name: Raise issue on failure
#        if: fail()
#        run:

      - name: Dump context
        if: always()
        uses: crazy-max/ghaction-dump-context@v1
